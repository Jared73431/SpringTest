version: '3.8'

services:
  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: car-postgres
    environment:
      POSTGRES_DB: test2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - car-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot 應用程式
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: car-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://postgres:5432/test2
      - SPRING_R2DBC_USERNAME=postgres
      - SPRING_R2DBC_PASSWORD=postgres
      - SPRING_FLYWAY_URL=jdbc:postgresql://postgres:5432/test2
      - SPRING_FLYWAY_USER=postgres
      - SPRING_FLYWAY_PASSWORD=postgres
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    networks:
      - car-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # pgAdmin (可選，用於資料庫管理)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: car-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - car-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  car-network:
    driver: bridge